import streamlit as st
import numpy as np
import pandas as pd
from pathlib import Path
import os
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow.keras.preprocessing.image import load_img, img_to_array

# Load the trained model
model = tf.keras.models.load_model('FV_1.h5')

# Define the image processing function
def image_processing(filepath):
    labels = []
    for file in filepath:
        parts = os.path.normpath(file).split(os.sep)
        if len(parts) > 1:
            labels.append(parts[-2])
        else:
            labels.append("Unknown")

    filepath = pd.Series(filepath, name='Filepath').astype(str)
    labels = pd.Series(labels, name='Label')

    df = pd.concat([filepath, labels], axis=1)
    df = df.sample(frac=1).reset_index(drop=True)
    
    return df

# Define the prediction function
def output(location):
    img = load_img(location, target_size=(224, 224, 3))
    img = img_to_array(img)
    img = img / 255
    img = np.expand_dims(img, [0])
    answer = model.predict(img)
    y_class = answer.argmax(axis=-1)
    y = " ".join(str(x) for x in y_class)
    y = int(y)
    res = labels[y]
    return res

# Streamlit app code
st.title('Food Calorie Recognition')
st.write('Upload an image of food to get the calorie prediction.')

uploaded_file = st.file_uploader('Choose an image...', type=['jpg', 'jpeg', 'png'])

if uploaded_file is not None:
    image = load_img(uploaded_file, target_size=(224, 224))
    st.image(image, caption='Uploaded Image.', use_column_width=True)
    st.write("")
    st.write("Classifying...")
    
    # Save the uploaded file temporarily
    temp_file_path = f'temp_image.{uploaded_file.name.split(".")[-1]}'
    with open(temp_file_path, 'wb') as f:
        f.write(uploaded_file.getbuffer())

    # Perform prediction
    label = output(temp_file_path)
    st.write(f'Prediction: {label}')
    
    # Clean up temporary file
    os.remove(temp_file_path)
