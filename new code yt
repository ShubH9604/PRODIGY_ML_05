import os
import streamlit as st
from PIL import Image
from keras.preprocessing.image import load_img, img_to_array
import numpy as np
from keras.models import load_model
import requests
from bs4 import BeautifulSoup

# Load the model
model = load_model('Food_Calorie_Recognition_Model.h5')

# Define the labels dictionary
labels = {0: 'Apple', 1: 'Banana', 2: 'Beetroot', 3: 'Broccoli', 4: 'Cabbage', 5: 'Carrot', 6: 'Cauliflower', 7: 'Celery', 8: 'Chili Pepper', 9: 'Cucumber', 10: 'Eggplant', 11: 'Garlic', 12: 'Green Bean', 13: 'Kale', 14: 'Leek', 15: 'Lettuce', 16: 'Mushroom', 17: 'Onion', 18: 'Pepper', 19: 'Pumpkin', 20: 'Radish', 21: 'Spinach', 22: 'Sweet Corn', 23: 'Sweet Potato', 24: 'Tomato', 25: 'Turnip', 26: 'Zucchini', 27: 'Squash', 28: 'Chard', 29: 'Artichoke', 30: 'Asparagus', 31: 'Oregano', 32: 'Coriander', 33: 'Green Onion', 34: 'Brussels Sprouts', 35: 'Chili Pepper'}

# Create fruits and vegetables lists
fruits = ['Apple', 'Banana', 'Chili Pepper', 'Cucumber', 'Eggplant', 'Tomato']
vegetables = ['Beetroot', 'Broccoli', 'Cabbage', 'Carrot', 'Cauliflower', 'Celery', 'Garlic', 'Green Bean', 'Kale', 'Leek', 'Lettuce', 'Mushroom', 'Onion', 'Pepper', 'Pumpkin', 'Radish', 'Spinach', 'Sweet Corn', 'Sweet Potato', 'Turnip', 'Zucchini', 'Squash', 'Chard', 'Artichoke', 'Asparagus', 'Oregano', 'Coriander', 'Green Onion', 'Brussels Sprouts']

def fetch_calories(prediction):
    url = 'https://www.google.com/search?&q=calories in ' + prediction
    req = requests.get(url).text
    scrap = BeautifulSoup(req, 'html.parser')
    calories = scrap.find("div", class_="BNeawe iBp4i AP7Wnd").text
    return calories

def processed_image(img_path):
    img = load_img(img_path, target_size=(224, 224))
    img = img_to_array(img)
    img = img / 255.0
    img = np.expand_dims(img, axis=0)
    answer = model.predict(img)
    y_class = answer.argmax(axis=-1)
    y = int(y_class[0])
    res = labels[y]
    return res

def run():
    st.title("Fruits Calorie Classification")

    img_file = st.file_uploader("Choose an image", type=["jpg", "png"])
    if img_file is not None:
        img = Image.open(img_file).resize((250, 250))
        st.image(img, use_column_width=False)
        
        # Create the directory if it doesn't exist
        if not os.path.exists('./upload_images'):
            os.makedirs('./upload_images')
        
        save_image_path = './upload_images/' + img_file.name
        with open(save_image_path, "wb") as f:
            f.write(img_file.getbuffer())

        if img_file is not None:
            result = processed_image(save_image_path)
            if result in vegetables:
                st.info('Category: Vegetables')
            else:
                st.info('Category: Fruit')
            st.success("Predicted: " + result)
            cal = fetch_calories(result)
            st.warning(cal + ' (100 grams)')

if __name__ == "__main__":
    run()
